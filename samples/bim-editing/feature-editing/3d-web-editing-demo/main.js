define(["esri/Camera","esri/Graphic","esri/Map","esri/geometry","esri/geometry/Point","esri/layers/BuildingSceneLayer","esri/layers/FeatureLayer","esri/layers/GraphicsLayer","esri/layers/support/BuildingFilter","esri/renderers","esri/symbols/IconSymbol3DLayer","esri/symbols/LineSymbol3D","esri/symbols/LineSymbol3DLayer","esri/symbols/ObjectSymbol3DLayer","esri/symbols/PointSymbol3D","esri/symbols/PolygonSymbol3D","esri/symbols/TextSymbol3DLayer","esri/views/SceneView","esri/views/draw/Draw","esri/widgets/Editor","esri/widgets/Expand","esri/widgets/Sketch/SketchViewModel","esri/widgets/Slider"], function(__WEBPACK_EXTERNAL_MODULE_esri_Camera__, __WEBPACK_EXTERNAL_MODULE_esri_Graphic__, __WEBPACK_EXTERNAL_MODULE_esri_Map__, __WEBPACK_EXTERNAL_MODULE_esri_geometry__, __WEBPACK_EXTERNAL_MODULE_esri_geometry_Point__, __WEBPACK_EXTERNAL_MODULE_esri_layers_BuildingSceneLayer__, __WEBPACK_EXTERNAL_MODULE_esri_layers_FeatureLayer__, __WEBPACK_EXTERNAL_MODULE_esri_layers_GraphicsLayer__, __WEBPACK_EXTERNAL_MODULE_esri_layers_support_BuildingFilter__, __WEBPACK_EXTERNAL_MODULE_esri_renderers__, __WEBPACK_EXTERNAL_MODULE_esri_symbols_IconSymbol3DLayer__, __WEBPACK_EXTERNAL_MODULE_esri_symbols_LineSymbol3D__, __WEBPACK_EXTERNAL_MODULE_esri_symbols_LineSymbol3DLayer__, __WEBPACK_EXTERNAL_MODULE_esri_symbols_ObjectSymbol3DLayer__, __WEBPACK_EXTERNAL_MODULE_esri_symbols_PointSymbol3D__, __WEBPACK_EXTERNAL_MODULE_esri_symbols_PolygonSymbol3D__, __WEBPACK_EXTERNAL_MODULE_esri_symbols_TextSymbol3DLayer__, __WEBPACK_EXTERNAL_MODULE_esri_views_SceneView__, __WEBPACK_EXTERNAL_MODULE_esri_views_draw_Draw__, __WEBPACK_EXTERNAL_MODULE_esri_widgets_Editor__, __WEBPACK_EXTERNAL_MODULE_esri_widgets_Expand__, __WEBPACK_EXTERNAL_MODULE_esri_widgets_Sketch_SketchViewModel__, __WEBPACK_EXTERNAL_MODULE_esri_widgets_Slider__) { return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/BimExample.js":
/*!***************************!*\
  !*** ./src/BimExample.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! esri/Map */ \"esri/Map\"), __webpack_require__(/*! esri/views/SceneView */ \"esri/views/SceneView\"), __webpack_require__(/*! esri/layers/GraphicsLayer */ \"esri/layers/GraphicsLayer\"), __webpack_require__(/*! esri/Camera */ \"esri/Camera\"), __webpack_require__(/*! esri/widgets/Slider */ \"esri/widgets/Slider\"), __webpack_require__(/*! esri/layers/BuildingSceneLayer */ \"esri/layers/BuildingSceneLayer\"), __webpack_require__(/*! ./data */ \"./src/data.js\"), __webpack_require__(/*! esri/layers/support/BuildingFilter */ \"esri/layers/support/BuildingFilter\"), __webpack_require__(/*! ./Scene */ \"./src/Scene.js\"), __webpack_require__(/*! ./PointAnnotations */ \"./src/PointAnnotations.js\"), __webpack_require__(/*! ./PolygonAnnotations */ \"./src/PolygonAnnotations.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, Map_1, SceneView_1, GraphicsLayer_1, Camera_1, Slider_1, BuildingSceneLayer_1, data_1, BuildingFilter_1, Scene_1, PointAnnotations_1, PolygonAnnotations_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    Map_1 = __importDefault(Map_1);\r\n    SceneView_1 = __importDefault(SceneView_1);\r\n    GraphicsLayer_1 = __importDefault(GraphicsLayer_1);\r\n    Camera_1 = __importDefault(Camera_1);\r\n    Slider_1 = __importDefault(Slider_1);\r\n    BuildingSceneLayer_1 = __importDefault(BuildingSceneLayer_1);\r\n    BuildingFilter_1 = __importDefault(BuildingFilter_1);\r\n    ;\r\n    var Scene = /** @class */ (function (_super) {\r\n        __extends(Scene, _super);\r\n        function Scene() {\r\n            var _this = _super.call(this, createSceneView()) || this;\r\n            _this.name = \"bim-example\";\r\n            _this.cameras = [];\r\n            _this.cameraLayer = new GraphicsLayer_1.default({ elevationInfo: { mode: \"absolute-height\" } });\r\n            // persistet ---\r\n            //splines: Splines = null;\r\n            _this.pointAnnotations = null;\r\n            _this.polygonAnnotations = null;\r\n            // bim example\r\n            _this.bimLayer = new BuildingSceneLayer_1.default({\r\n                url: \r\n                //\"https://tiles.arcgis.com/tiles/V6ZHFr6zdgNZuVG0/arcgis/rest/services/BSL__4326__US_Redlands__EsriAdminBldg_PublicDemo/SceneServer\",\r\n                \"https://tiles.arcgis.com/tiles/cFEFS0EWrhfDeVw9/arcgis/rest/services/Turanga_Library/SceneServer\",\r\n                //title: \"Administration Building, Redlands - Building Scene Layer\"\r\n                title: \"Tungsten Library, Christchurch, NZ - Building Scene Layer\"\r\n            });\r\n            _this.floorFieldName = \"BldgLevel\"; // name of the attribute which identifies the floor\r\n            _this.minFloor = 0;\r\n            _this.maxFloor = 0;\r\n            _this._activeFloor = 0;\r\n            _this._time = 0;\r\n            return _this;\r\n        }\r\n        Object.defineProperty(Scene.prototype, \"activeFloor\", {\r\n            get: function () {\r\n                return this._activeFloor;\r\n            },\r\n            set: function (value) {\r\n                this._activeFloor = value;\r\n                // set filter\r\n                var buildingFilter = new BuildingFilter_1.default({\r\n                    filterBlocks: [\r\n                        // the first filter block displays the active level with original textures\r\n                        // using `solid` filter mode\r\n                        {\r\n                            filterExpression: this.floorFieldName + \" = \" + this._activeFloor.toString(),\r\n                            filterMode: {\r\n                                type: \"solid\"\r\n                            }\r\n                        },\r\n                        // the second filter block displays the levels below the active level faded out\r\n                        // using `x-ray` filter mode\r\n                        {\r\n                            filterExpression: this.floorFieldName + \" < \" + this._activeFloor.toString(),\r\n                            filterMode: {\r\n                                type: \"x-ray\"\r\n                            }\r\n                        }\r\n                    ]\r\n                });\r\n                // set the filter in the filters array on the layer\r\n                this.bimLayer.filters = [buildingFilter];\r\n                // specify which filter is the one that should be applied\r\n                this.bimLayer.activeFilterId = buildingFilter.id;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Scene.prototype.load = function (loadedCallback) {\r\n            var _this = this;\r\n            this.view.camera = new Camera_1.default({\r\n                position: {\r\n                    //x: -13046427.303775102,\r\n                    //y: 4036595.645624613,\r\n                    //z: 430.53017157688737,\r\n                    // redlands admin building\r\n                    //x: -13045103.54643966,\r\n                    //y: 4036777.3188664303,\r\n                    //z: 445.823927924037,\r\n                    // christchurch\r\n                    x: 19218012.934741594,\r\n                    y: -5393079.987616428,\r\n                    z: 63.785132102668285,\r\n                    spatialReference: {\r\n                        wkid: 102100\r\n                    }\r\n                },\r\n                //heading: 50.52948875350955,\r\n                //tilt: 62.13243590814265\r\n                // redlands admin building\r\n                //heading: 318.36986922376934,\r\n                //tilt: 61.561182587502586\r\n                // christchurch\r\n                heading: 304.2051779069086,\r\n                tilt: 61.60225175907014\r\n            });\r\n            this.view.map.layers.add(this.bimLayer);\r\n            this.bimLayer.when(function () {\r\n                // the BuildingSceneLayer contains some layers which hide all the floor geometry\r\n                // since we want to look inside the building, we will disable those\r\n                _this.bimLayer.allSublayers.forEach(function (layer) {\r\n                    // modelName is standard accross all BuildingSceneLayer,\r\n                    // use it to identify a certain layer\r\n                    switch (layer.modelName) {\r\n                        // Because of performance reasons, the Full Model view is\r\n                        // by default set to false. In this scene the Full Model should be visible.\r\n                        case \"FullModel\":\r\n                            layer.visible = true;\r\n                            break;\r\n                        case \"Overview\":\r\n                            // the Overview layer contains the hull and roof which will obscure the interior geometry\r\n                            // this is why we make those invisible\r\n                            layer.visible = false;\r\n                            break;\r\n                        case \"Roofs\":\r\n                        case \"Walls\":\r\n                        case \"Rooms\":\r\n                        case \"Doors\":\r\n                        case \"StructuralColumns\":\r\n                        case \"Floors\":\r\n                        case \"Furniture\":\r\n                            layer.visible = true;\r\n                            break;\r\n                        case \"CurtainWallPanels\":\r\n                        case \"CurtainWallMullions\":\r\n                        case \"Ceilings\":\r\n                            layer.visible = false;\r\n                            break;\r\n                        default:\r\n                            layer.visible = true;\r\n                    }\r\n                });\r\n                _this.bimLayer.summaryStatistics.load().then(function () {\r\n                    var fieldStatistics = _this.bimLayer.summaryStatistics.fields;\r\n                    var i = 0;\r\n                    var levelStats = null;\r\n                    while (!levelStats) {\r\n                        if (fieldStatistics[i].fieldName === _this.floorFieldName) {\r\n                            levelStats = fieldStatistics[i];\r\n                            // initially use the middle level to filter the building\r\n                            _this.minFloor = levelStats.min;\r\n                            _this.maxFloor = levelStats.max;\r\n                            _this.activeFloor = Math.round(levelStats.max / 2);\r\n                        }\r\n                        i++;\r\n                    }\r\n                    _this.buildUI();\r\n                    loadedCallback();\r\n                });\r\n            });\r\n            // load stuff\r\n            //this.splines = new Splines( this, mockupControlCurveLayer());\r\n            this.pointAnnotations = new PointAnnotations_1.PointAnnotations(this, data_1.mockupPointAnnotationsLayer());\r\n            this.polygonAnnotations = new PolygonAnnotations_1.PolygonAnnotations(this, data_1.mockupPolygonAnnotationsLayer());\r\n            // cameras\r\n            this.view.map.layers.add(this.cameraLayer);\r\n        };\r\n        Object.defineProperty(Scene.prototype, \"time\", {\r\n            get: function () {\r\n                return this._time;\r\n            },\r\n            set: function (value) {\r\n                this._time = value;\r\n                this.cameras.forEach(function (camera) {\r\n                    camera.time = value;\r\n                });\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Scene.prototype.encodeSceneItemPayload = function () {\r\n            var payload = {\r\n                activeFloor: this.activeFloor,\r\n                cameraJSON: this.view.camera.toJSON()\r\n            };\r\n            return JSON.stringify(payload);\r\n        };\r\n        Scene.prototype.decodeSceneItemPayload = function (jsonString) {\r\n            var payload = JSON.parse(jsonString);\r\n            var result = {\r\n                activeFloor: payload.activeFloor,\r\n                camera: Camera_1.default.fromJSON(payload.cameraJSON)\r\n            };\r\n            return result;\r\n        };\r\n        Scene.prototype.clickItem = function (item) {\r\n            if (\"payload\" in item.attributes) {\r\n                var payload = this.decodeSceneItemPayload(item.attributes[\"payload\"]);\r\n                //const floor = payload.activeFloor;\r\n                var floor = item.attributes[\"floor\"];\r\n                this.activeFloor = floor;\r\n                // update gui\r\n                this.floorSlider.values = [this.activeFloor];\r\n                this.view.goTo(payload.camera);\r\n            }\r\n        };\r\n        Scene.prototype.buildUI = function () {\r\n            var _this = this;\r\n            var floorNumbers = [];\r\n            for (var i = this.minFloor; i <= this.maxFloor; ++i) {\r\n                floorNumbers.push(i);\r\n            }\r\n            var bimUIPanel = document.createElement(\"div\");\r\n            bimUIPanel.id = \"bim-panel\";\r\n            bimUIPanel.classList.add(\"esri-widget\");\r\n            bimUIPanel.style.padding = \"0.8em\";\r\n            var bimPanelText = document.createElement(\"p\");\r\n            bimPanelText.innerHTML = \"floor\";\r\n            bimPanelText.style.paddingLeft = \"20px\";\r\n            bimPanelText.style.paddingRight = \"20px\";\r\n            bimUIPanel.appendChild(bimPanelText);\r\n            var floorSliderContainer = document.createElement(\"div\");\r\n            bimUIPanel.appendChild(floorSliderContainer);\r\n            floorSliderContainer.style.height = \"200px\";\r\n            floorSliderContainer.style.margin = \"1em 0 1em -20px\";\r\n            floorSliderContainer.style.background = \"transparent\";\r\n            this.floorSlider = new Slider_1.default({\r\n                container: floorSliderContainer,\r\n                min: this.minFloor,\r\n                max: this.maxFloor,\r\n                precision: 0,\r\n                layout: \"vertical\",\r\n                steps: 1,\r\n                tickConfigs: [\r\n                    {\r\n                        mode: \"position\",\r\n                        values: floorNumbers,\r\n                        labelsVisible: true\r\n                    }\r\n                ],\r\n                values: [this.activeFloor]\r\n            });\r\n            this.floorSlider.on(\"thumb-drag\", function (event) {\r\n                var newFloor = event.value;\r\n                _this.activeFloor = newFloor;\r\n            });\r\n            this.view.ui.add([bimUIPanel], \"bottom-left\");\r\n        };\r\n        return Scene;\r\n    }(Scene_1.SceneBase));\r\n    exports.Scene = Scene;\r\n    function createSceneView(container) {\r\n        if (container === void 0) { container = document.getElementById(\"sceneview-container\"); }\r\n        var map = new Map_1.default({\r\n            basemap: \"topo\",\r\n            ground: \"world-elevation\",\r\n            layers: []\r\n        });\r\n        var view = new SceneView_1.default({\r\n            map: map,\r\n            environment: {\r\n                //background: {\r\n                //    type: \"color\",\r\n                //    color: [55, 52, 44, 1]\r\n                //},\r\n                starsEnabled: false,\r\n                atmosphereEnabled: true\r\n            },\r\n            ui: {\r\n                components: [\"attribution\"]\r\n            },\r\n            container: container,\r\n            viewingMode: \"global\",\r\n            qualityProfile: \"high\"\r\n        });\r\n        return view;\r\n    }\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack:///./src/BimExample.js?");

/***/ }),

/***/ "./src/Cameras.js":
/*!************************!*\
  !*** ./src/Cameras.js ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! esri/geometry/Point */ \"esri/geometry/Point\"), __webpack_require__(/*! esri/widgets/Sketch/SketchViewModel */ \"esri/widgets/Sketch/SketchViewModel\"), __webpack_require__(/*! esri/Graphic */ \"esri/Graphic\"), __webpack_require__(/*! esri/symbols/PointSymbol3D */ \"esri/symbols/PointSymbol3D\"), __webpack_require__(/*! esri/symbols/LineSymbol3D */ \"esri/symbols/LineSymbol3D\"), __webpack_require__(/*! esri/symbols/ObjectSymbol3DLayer */ \"esri/symbols/ObjectSymbol3DLayer\"), __webpack_require__(/*! esri/symbols/LineSymbol3DLayer */ \"esri/symbols/LineSymbol3DLayer\"), __webpack_require__(/*! esri/geometry */ \"esri/geometry\"), __webpack_require__(/*! esri/Camera */ \"esri/Camera\"), __webpack_require__(/*! esri/views/draw/Draw */ \"esri/views/draw/Draw\"), __webpack_require__(/*! ./utils */ \"./src/utils.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, Point_1, SketchViewModel_1, Graphic_1, PointSymbol3D_1, LineSymbol3D_1, ObjectSymbol3DLayer_1, LineSymbol3DLayer_1, geometry_1, Camera_1, Draw_1, utils_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    Point_1 = __importDefault(Point_1);\r\n    SketchViewModel_1 = __importDefault(SketchViewModel_1);\r\n    Graphic_1 = __importDefault(Graphic_1);\r\n    PointSymbol3D_1 = __importDefault(PointSymbol3D_1);\r\n    LineSymbol3D_1 = __importDefault(LineSymbol3D_1);\r\n    ObjectSymbol3DLayer_1 = __importDefault(ObjectSymbol3DLayer_1);\r\n    LineSymbol3DLayer_1 = __importDefault(LineSymbol3DLayer_1);\r\n    Camera_1 = __importDefault(Camera_1);\r\n    Draw_1 = __importDefault(Draw_1);\r\n    var Camera = /** @class */ (function () {\r\n        function Camera(view, layer, initialPosition) {\r\n            var _this = this;\r\n            this.view = view;\r\n            this.layer = layer;\r\n            this.cameraGraphic = null;\r\n            this.lookatGraphic = null;\r\n            this.lineOfSightGraphic = null;\r\n            this._animationCurve = null;\r\n            this._time = 0;\r\n            this._pipView = null;\r\n            this.view.map.add(this.layer);\r\n            this.cameraGraphic = new Graphic_1.default({ geometry: initialPosition.clone(), symbol: Camera.getCameraSymbol() });\r\n            this.layer.add(this.cameraGraphic);\r\n            this.cameraGraphic.watch(\"geometry\", function (geometry) {\r\n                _this.updateLineOfSight();\r\n                _this.updateOrientation();\r\n            });\r\n        }\r\n        Object.defineProperty(Camera.prototype, \"pipView\", {\r\n            get: function () {\r\n                return this._pipView;\r\n            },\r\n            set: function (pipView) {\r\n                this._pipView = pipView;\r\n                pipView.camera = this.esriCamera;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(Camera.prototype, \"time\", {\r\n            get: function () {\r\n                return this._time;\r\n            },\r\n            set: function (time) {\r\n                this._time = time;\r\n                this.updatePositionFromAnimation();\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(Camera.prototype, \"animationCurve\", {\r\n            set: function (curve) {\r\n                var _this = this;\r\n                this._animationCurve = curve;\r\n                this._animationCurve.curveGraphic.watch(\"geometry\", function () {\r\n                    _this.updatePositionFromAnimation();\r\n                });\r\n                this.updatePositionFromAnimation();\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(Camera.prototype, \"hasTarget\", {\r\n            get: function () {\r\n                return this.lookatGraphic != null;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(Camera.prototype, \"isAnimated\", {\r\n            get: function () {\r\n                return this._animationCurve != null;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(Camera.prototype, \"position\", {\r\n            get: function () {\r\n                return this.cameraGraphic.geometry;\r\n            },\r\n            set: function (value) {\r\n                this.cameraGraphic.geometry = value;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(Camera.prototype, \"target\", {\r\n            get: function () {\r\n                if (this.lookatGraphic != null) {\r\n                    return this.lookatGraphic.geometry;\r\n                }\r\n                return null;\r\n            },\r\n            set: function (value) {\r\n                var _this = this;\r\n                if (this.lookatGraphic == null) {\r\n                    this.lookatGraphic = new Graphic_1.default({ geometry: value, symbol: Camera.getLookAtSymbol() });\r\n                    this.layer.add(this.lookatGraphic);\r\n                    this.lookatGraphic.watch(\"geometry\", function (geometry) {\r\n                        _this.updateLineOfSight();\r\n                        _this.updateOrientation();\r\n                    });\r\n                    this.updateLineOfSight();\r\n                    this.updateOrientation();\r\n                }\r\n                else {\r\n                    this.lookatGraphic.geometry = value;\r\n                }\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(Camera.prototype, \"esriCamera\", {\r\n            get: function () {\r\n                var symbol = this.cameraGraphic.symbol;\r\n                var symbolLayer = symbol.symbolLayers.getItemAt(0);\r\n                return new Camera_1.default({ position: this.position, heading: symbolLayer.heading, tilt: symbolLayer.tilt + 90 });\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Camera.prototype.updatePositionFromAnimation = function () {\r\n            if (this._animationCurve != null) {\r\n                this.cameraGraphic.geometry = this._animationCurve.eval(this.time);\r\n            }\r\n        };\r\n        Camera.prototype.updateLineOfSight = function () {\r\n            if (this.lookatGraphic) {\r\n                var position = this.cameraGraphic.geometry;\r\n                var target = this.lookatGraphic.geometry;\r\n                var geometry = new geometry_1.Polyline({ paths: [[[position.x, position.y, position.z], [target.x, target.y, target.z]]], spatialReference: this.view.spatialReference });\r\n                if (this.lineOfSightGraphic == null) {\r\n                    this.lineOfSightGraphic = new Graphic_1.default({ geometry: geometry, symbol: Camera.getLineOfSightSymbol() });\r\n                    this.layer.add(this.lineOfSightGraphic);\r\n                }\r\n                else {\r\n                    this.lineOfSightGraphic.geometry = geometry;\r\n                }\r\n            }\r\n        };\r\n        Camera.prototype.updateOrientation = function () {\r\n            if (this.lookatGraphic) {\r\n                var position = this.cameraGraphic.geometry;\r\n                var target = this.lookatGraphic.geometry;\r\n                // compute heading\r\n                var p0 = utils_1.Vec2.from(position);\r\n                var p1 = utils_1.Vec2.from(target);\r\n                var d = utils_1.Vec2.subtract(p1, p0);\r\n                var distance_b = d.length();\r\n                d.normalize();\r\n                var cos = utils_1.Vec2.dot(d, utils_1.Vec2.create(0, 1));\r\n                var angle = Math.acos(cos);\r\n                var heading = d.x > 0 ? angle / Math.PI * 180 : ((2 - angle / Math.PI) * 180);\r\n                // compute tilt\r\n                var height = position.z - target.z;\r\n                var distance_a = Math.abs(height);\r\n                var distance_c = Math.sqrt(distance_a * distance_a + distance_b * distance_b);\r\n                var tiltAngle = Math.acos(distance_a / distance_c);\r\n                var tilt = height > 0 ? (-0.5 + tiltAngle / Math.PI) * 180 : (0.5 - tiltAngle / Math.PI) * 180;\r\n                // update symbol            \r\n                var symbol = this.cameraGraphic.symbol.clone();\r\n                var symbolLayer = symbol.symbolLayers.getItemAt(0);\r\n                symbolLayer.heading = heading;\r\n                symbolLayer.tilt = tilt;\r\n                this.cameraGraphic.symbol = symbol;\r\n            }\r\n            if (this._pipView != null) {\r\n                this._pipView.camera = this.esriCamera;\r\n            }\r\n        };\r\n        Camera.prototype.remove = function () {\r\n            // TODO:\r\n        };\r\n        Camera.getCameraSymbol = function () {\r\n            return new PointSymbol3D_1.default({ symbolLayers: [new ObjectSymbol3DLayer_1.default({\r\n                        width: 15,\r\n                        material: {\r\n                            color: \"gray\"\r\n                        },\r\n                        resource: {\r\n                            href: utils_1.baseURL() + \"/camera-gizmo.glb\"\r\n                        }\r\n                    })] });\r\n        };\r\n        Camera.getLookAtSymbol = function () {\r\n            return new PointSymbol3D_1.default({ symbolLayers: [new ObjectSymbol3DLayer_1.default({\r\n                        width: 15,\r\n                        material: {\r\n                            color: \"green\"\r\n                        },\r\n                        resource: {\r\n                            primitive: \"sphere\"\r\n                        }\r\n                    })] });\r\n        };\r\n        Camera.getLineOfSightSymbol = function () {\r\n            return new LineSymbol3D_1.default({ symbolLayers: [new LineSymbol3DLayer_1.default({\r\n                        size: 2,\r\n                        material: {\r\n                            color: \"green\"\r\n                        },\r\n                        cap: \"round\"\r\n                    })] });\r\n        };\r\n        return Camera;\r\n    }());\r\n    exports.Camera = Camera;\r\n    function move(view, cameraLayer, graphic, enableRotation) {\r\n        if (enableRotation === void 0) { enableRotation = false; }\r\n        var svm = new SketchViewModel_1.default({\r\n            view: view,\r\n            layer: cameraLayer\r\n        });\r\n        svm.update(graphic, { tool: \"transform\", enableRotation: enableRotation, enableScaling: false });\r\n        var handle = svm.on(\"update\", function (e) {\r\n            if (e.state == \"complete\") {\r\n                svm.destroy();\r\n                handle.remove();\r\n            }\r\n        });\r\n    }\r\n    exports.move = move;\r\n    function createCamera(scene, cameraLayer, pipView, position, target) {\r\n        var view = scene.view;\r\n        var camera = new Camera(view, cameraLayer, position);\r\n        camera.position = position;\r\n        camera.target = target;\r\n        scene.cameras.push(camera);\r\n        if (pipView != null) {\r\n            camera.pipView = pipView;\r\n            pipView.container.style.display = null;\r\n        }\r\n    }\r\n    exports.createCamera = createCamera;\r\n    function drawCamera(scene, cameraLayer, pipView) {\r\n        var view = scene.view;\r\n        var draw = new Draw_1.default({ view: view });\r\n        var action = draw.create(\"circle\", {\r\n            mode: \"hybrid\",\r\n            elevationInfo: cameraLayer.elevationInfo,\r\n            defaultZ: 100,\r\n            hasZ: true\r\n        });\r\n        var camera = null;\r\n        var startPoint = null;\r\n        action.on(\"vertex-add\", function (event) {\r\n            if (event.vertexIndex == 0) {\r\n                // first vertex (camera target)\r\n                var vertex = event.vertices[event.vertexIndex];\r\n                startPoint = new Point_1.default({ x: vertex[0], y: vertex[1], z: vertex[2], spatialReference: view.spatialReference });\r\n                camera = new Camera(view, cameraLayer, startPoint);\r\n            }\r\n            else {\r\n                // second vertex (camera position)\r\n                var vertex = event.vertices[event.vertexIndex];\r\n                camera.target = startPoint;\r\n                camera.position = new Point_1.default({ x: vertex[0], y: vertex[1], z: vertex[2], spatialReference: view.spatialReference });\r\n            }\r\n        });\r\n        action.on(\"cursor-update\", function (event) {\r\n            var vertices = event.vertices;\r\n            if (vertices.length === 2) {\r\n                var vertex = vertices[vertices.length - 1];\r\n                camera.position = new Point_1.default({ x: vertex[0], y: vertex[1], z: vertex[2], spatialReference: view.spatialReference });\r\n                camera.target = startPoint;\r\n            }\r\n        });\r\n        action.on(\"draw-complete\", function (event) {\r\n            if (camera.lookatGraphic == null) {\r\n                // no target was specified\r\n                console.log(\"TODO!!!!!!\");\r\n            }\r\n            scene.cameras.push(camera);\r\n            camera.pipView = pipView;\r\n            // TODO: make pipview visible\r\n            pipView.container.style.display = null;\r\n            //document.getElementById(\"camera-\")\r\n            draw.destroy();\r\n        });\r\n    }\r\n    exports.drawCamera = drawCamera;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack:///./src/Cameras.js?");

/***/ }),

/***/ "./src/ItemList.js":
/*!*************************!*\
  !*** ./src/ItemList.js ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! ./utils */ \"./src/utils.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, utils_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var ItemList = /** @class */ (function () {\r\n        function ItemList(provider) {\r\n            var _this = this;\r\n            this.provider = provider;\r\n            this.items = new Map();\r\n            this.itemClicked = new utils_1.SimpleEventDispatcher();\r\n            this.div = document.createElement(\"div\");\r\n            this.div.style.cssFloat = \"left\";\r\n            this.div.classList.add(\"itemlist\");\r\n            this.ol = document.createElement(\"ol\");\r\n            this.ol.style.listStyle = \"none\";\r\n            this.ol.style.margin = \"0\";\r\n            this.ol.style.padding = \"0\";\r\n            this.div.appendChild(this.ol);\r\n            provider.getAllItems().forEach(function (item) {\r\n                _this.addItem(item);\r\n            });\r\n            provider.itemAdded.subscribe(function (item) { return _this.addItem(item); });\r\n            provider.itemRemoved.subscribe(function (item) { return _this.removeItem(item); });\r\n            provider.itemUpdated.subscribe(function (item) { return _this.updateItem(item); });\r\n        }\r\n        ItemList.prototype.addItem = function (item) {\r\n            var _this = this;\r\n            var li = document.createElement(\"li\");\r\n            var itemDiv = document.createElement(\"div\");\r\n            itemDiv.classList.add(\"item\");\r\n            var a_title = document.createElement(\"a\");\r\n            a_title.classList.add(\"title\");\r\n            a_title.innerHTML = item.label;\r\n            a_title.onclick = function () {\r\n                _this.itemClicked.dispatch(item);\r\n            };\r\n            itemDiv.appendChild(a_title);\r\n            li.appendChild(itemDiv);\r\n            this.ol.appendChild(li);\r\n            this.items.set(item, { li: li, a_title: a_title });\r\n        };\r\n        ItemList.prototype.removeItem = function (item) {\r\n            var itemDOM = this.items.get(item);\r\n            this.ol.removeChild(itemDOM.li);\r\n            this.items.delete(item);\r\n        };\r\n        ItemList.prototype.updateItem = function (item) {\r\n            var itemDOM = this.items.get(item);\r\n            itemDOM.a_title.innerHTML = item.label;\r\n        };\r\n        return ItemList;\r\n    }());\r\n    exports.ItemList = ItemList;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack:///./src/ItemList.js?");

/***/ }),

/***/ "./src/PointAnnotations.js":
/*!*********************************!*\
  !*** ./src/PointAnnotations.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! esri/layers/GraphicsLayer */ \"esri/layers/GraphicsLayer\"), __webpack_require__(/*! esri/Graphic */ \"esri/Graphic\"), __webpack_require__(/*! esri/symbols/PointSymbol3D */ \"esri/symbols/PointSymbol3D\"), __webpack_require__(/*! esri/symbols/TextSymbol3DLayer */ \"esri/symbols/TextSymbol3DLayer\"), __webpack_require__(/*! esri/symbols/IconSymbol3DLayer */ \"esri/symbols/IconSymbol3DLayer\"), __webpack_require__(/*! ./Scene */ \"./src/Scene.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, GraphicsLayer_1, Graphic_1, PointSymbol3D_1, TextSymbol3DLayer_1, IconSymbol3DLayer_1, Scene_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    GraphicsLayer_1 = __importDefault(GraphicsLayer_1);\r\n    Graphic_1 = __importDefault(Graphic_1);\r\n    PointSymbol3D_1 = __importDefault(PointSymbol3D_1);\r\n    TextSymbol3DLayer_1 = __importDefault(TextSymbol3DLayer_1);\r\n    IconSymbol3DLayer_1 = __importDefault(IconSymbol3DLayer_1);\r\n    function getPointAnnotationSymbol() {\r\n        return new PointSymbol3D_1.default({ symbolLayers: [\r\n                new IconSymbol3DLayer_1.default({\r\n                    size: 8,\r\n                    resource: { primitive: \"circle\" },\r\n                    material: { color: \"red\" }\r\n                })\r\n            ] });\r\n    }\r\n    function getLabelSymbol() {\r\n        return new PointSymbol3D_1.default({\r\n            symbolLayers: [\r\n                new TextSymbol3DLayer_1.default({\r\n                    size: 16,\r\n                    text: \"label test\",\r\n                    material: { color: \"black\" }\r\n                })\r\n            ],\r\n            verticalOffset: {\r\n                screenLength: 20\r\n            },\r\n            callout: {\r\n                type: \"line\",\r\n                size: 1.5,\r\n                color: [150, 150, 150]\r\n            }\r\n        });\r\n    }\r\n    function setLabelText(feature, text) {\r\n        if (feature == null) {\r\n            return;\r\n        }\r\n        var symbol = feature.symbol.clone();\r\n        symbol.symbolLayers.getItemAt(0).text = text;\r\n        feature.symbol = symbol;\r\n    }\r\n    var PointAnnotation = /** @class */ (function () {\r\n        function PointAnnotation(view, displayLayer) {\r\n            this.view = view;\r\n            this.displayLayer = displayLayer;\r\n            this.label = \"PointAnnotation\";\r\n            this.attributes = {};\r\n            this.labelGraphic = null;\r\n        }\r\n        PointAnnotation.prototype.remove = function () {\r\n            if (this.labelGraphic != null) {\r\n                this.displayLayer.remove(this.labelGraphic);\r\n                this.labelGraphic = null;\r\n            }\r\n        };\r\n        PointAnnotation.prototype.updateGeometry = function (geometry) {\r\n            if (this.labelGraphic == null) {\r\n                var symbol = getLabelSymbol();\r\n                this.labelGraphic = new Graphic_1.default({ geometry: geometry, symbol: symbol });\r\n                this.displayLayer.add(this.labelGraphic);\r\n            }\r\n            else {\r\n                this.labelGraphic.geometry = geometry;\r\n            }\r\n        };\r\n        PointAnnotation.prototype.updateAttributes = function (attributes) {\r\n            this.attributes = __assign({}, attributes);\r\n            this.label = attributes[\"label\"];\r\n            setLabelText(this.labelGraphic, this.label);\r\n        };\r\n        return PointAnnotation;\r\n    }());\r\n    exports.PointAnnotation = PointAnnotation;\r\n    var PointAnnotations = /** @class */ (function (_super) {\r\n        __extends(PointAnnotations, _super);\r\n        function PointAnnotations(scene, controlCurvesFeatureLayer) {\r\n            var _this = _super.call(this, scene, controlCurvesFeatureLayer) || this;\r\n            _this.scene = scene;\r\n            _this.displayLayer = new GraphicsLayer_1.default({ elevationInfo: { mode: \"absolute-height\" } });\r\n            // labels\r\n            _this.scene.view.map.layers.add(_this.displayLayer);\r\n            return _this;\r\n        }\r\n        PointAnnotations.prototype.create = function () {\r\n            return new PointAnnotation(this.scene.view, this.displayLayer);\r\n        };\r\n        PointAnnotations.prototype.getLayerInfo = function () {\r\n            return {\r\n                layer: this.featureLayer,\r\n                fieldConfig: [\r\n                    {\r\n                        name: \"label\",\r\n                        label: \"label\"\r\n                    },\r\n                    {\r\n                        name: \"floor\",\r\n                        label: \"floor\"\r\n                    }\r\n                ]\r\n            };\r\n        };\r\n        return PointAnnotations;\r\n    }(Scene_1.SceneItemManager));\r\n    exports.PointAnnotations = PointAnnotations;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack:///./src/PointAnnotations.js?");

/***/ }),

/***/ "./src/PolygonAnnotations.js":
/*!***********************************!*\
  !*** ./src/PolygonAnnotations.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! esri/layers/GraphicsLayer */ \"esri/layers/GraphicsLayer\"), __webpack_require__(/*! esri/Graphic */ \"esri/Graphic\"), __webpack_require__(/*! esri/symbols/PointSymbol3D */ \"esri/symbols/PointSymbol3D\"), __webpack_require__(/*! esri/symbols/TextSymbol3DLayer */ \"esri/symbols/TextSymbol3DLayer\"), __webpack_require__(/*! esri/symbols/IconSymbol3DLayer */ \"esri/symbols/IconSymbol3DLayer\"), __webpack_require__(/*! ./Scene */ \"./src/Scene.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, GraphicsLayer_1, Graphic_1, PointSymbol3D_1, TextSymbol3DLayer_1, IconSymbol3DLayer_1, Scene_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    GraphicsLayer_1 = __importDefault(GraphicsLayer_1);\r\n    Graphic_1 = __importDefault(Graphic_1);\r\n    PointSymbol3D_1 = __importDefault(PointSymbol3D_1);\r\n    TextSymbol3DLayer_1 = __importDefault(TextSymbol3DLayer_1);\r\n    IconSymbol3DLayer_1 = __importDefault(IconSymbol3DLayer_1);\r\n    function getPointAnnotationSymbol() {\r\n        return new PointSymbol3D_1.default({ symbolLayers: [\r\n                new IconSymbol3DLayer_1.default({\r\n                    size: 8,\r\n                    resource: { primitive: \"circle\" },\r\n                    material: { color: \"red\" }\r\n                })\r\n            ] });\r\n    }\r\n    function getLabelSymbol() {\r\n        return new PointSymbol3D_1.default({\r\n            symbolLayers: [\r\n                new TextSymbol3DLayer_1.default({\r\n                    size: 16,\r\n                    text: \"\",\r\n                    material: { color: \"black\" }\r\n                })\r\n            ],\r\n            verticalOffset: {\r\n                screenLength: 20\r\n            },\r\n            callout: {\r\n                type: \"line\",\r\n                size: 1.5,\r\n                color: [150, 150, 150]\r\n            }\r\n        });\r\n    }\r\n    function setLabelText(feature, text) {\r\n        if (feature == null) {\r\n            return;\r\n        }\r\n        var symbol = feature.symbol.clone();\r\n        symbol.symbolLayers.getItemAt(0).text = text;\r\n        feature.symbol = symbol;\r\n    }\r\n    var PolygonAnnotation = /** @class */ (function () {\r\n        function PolygonAnnotation(view, displayLayer) {\r\n            this.view = view;\r\n            this.displayLayer = displayLayer;\r\n            this.label = \"PolygonAnnotation\";\r\n            this.attributes = {};\r\n            this.labelGraphic = null;\r\n        }\r\n        PolygonAnnotation.prototype.remove = function () {\r\n            if (this.labelGraphic != null) {\r\n                this.displayLayer.remove(this.labelGraphic);\r\n                this.labelGraphic = null;\r\n            }\r\n        };\r\n        PolygonAnnotation.prototype.updateGeometry = function (geometry) {\r\n            if (geometry.type != \"polygon\") {\r\n                return;\r\n            }\r\n            var polygon = geometry;\r\n            if (this.labelGraphic == null) {\r\n                var symbol = getLabelSymbol();\r\n                this.labelGraphic = new Graphic_1.default({ geometry: polygon.centroid, symbol: symbol });\r\n                this.displayLayer.add(this.labelGraphic);\r\n            }\r\n            else {\r\n                this.labelGraphic.geometry = geometry;\r\n            }\r\n        };\r\n        PolygonAnnotation.prototype.updateAttributes = function (attributes) {\r\n            this.attributes = __assign({}, attributes);\r\n            this.label = attributes[\"label\"];\r\n            setLabelText(this.labelGraphic, this.label);\r\n        };\r\n        return PolygonAnnotation;\r\n    }());\r\n    exports.PolygonAnnotation = PolygonAnnotation;\r\n    var PolygonAnnotations = /** @class */ (function (_super) {\r\n        __extends(PolygonAnnotations, _super);\r\n        function PolygonAnnotations(scene, controlCurvesFeatureLayer) {\r\n            var _this = _super.call(this, scene, controlCurvesFeatureLayer) || this;\r\n            _this.scene = scene;\r\n            _this.displayLayer = new GraphicsLayer_1.default({ elevationInfo: { mode: \"absolute-height\" } });\r\n            // labels\r\n            _this.scene.view.map.layers.add(_this.displayLayer);\r\n            return _this;\r\n        }\r\n        PolygonAnnotations.prototype.create = function () {\r\n            return new PolygonAnnotation(this.scene.view, this.displayLayer);\r\n        };\r\n        PolygonAnnotations.prototype.getLayerInfo = function () {\r\n            return {\r\n                layer: this.featureLayer,\r\n                fieldConfig: [\r\n                    {\r\n                        name: \"label\",\r\n                        label: \"label\"\r\n                    },\r\n                    {\r\n                        name: \"floor\",\r\n                        label: \"floor\"\r\n                    }\r\n                ]\r\n            };\r\n        };\r\n        return PolygonAnnotations;\r\n    }(Scene_1.SceneItemManager));\r\n    exports.PolygonAnnotations = PolygonAnnotations;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack:///./src/PolygonAnnotations.js?");

/***/ }),

/***/ "./src/Scene.js":
/*!**********************!*\
  !*** ./src/Scene.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! ./utils */ \"./src/utils.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, utils_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var SceneItemManager = /** @class */ (function () {\r\n        function SceneItemManager(scene, featureLayer) {\r\n            var _this = this;\r\n            this.scene = scene;\r\n            this.featureLayer = featureLayer;\r\n            this.items = new Map(); // mapps oid->item\r\n            this.scene.view.map.layers.add(this.featureLayer);\r\n            // register this manager with the scene\r\n            scene.managers.push(this);\r\n            // add existing scene items from feature layer\r\n            this.scene.view.whenLayerView(this.featureLayer)\r\n                .then(function () {\r\n                var query = _this.featureLayer.createQuery();\r\n                query.returnZ = true;\r\n                return _this.featureLayer.queryFeatures(query);\r\n            })\r\n                .then(function (featureSet) {\r\n                featureSet.features.forEach(function (feature) {\r\n                    var oid = feature.getObjectId();\r\n                    _this.add(oid, _this.create());\r\n                    _this.update(oid, feature);\r\n                });\r\n            });\r\n            // listen to edits (triggered by Editor widget)\r\n            this.featureLayer.on(\"edits\", function (edits) {\r\n                var featureOidsToBeUpdated = [];\r\n                // add created features\r\n                edits.addedFeatures.forEach(function (feature) {\r\n                    _this.add(feature.objectId, _this.create());\r\n                    featureOidsToBeUpdated.push(feature.objectId);\r\n                });\r\n                // remove deleted features\r\n                edits.deletedFeatures.forEach(function (feature) {\r\n                    _this.remove(feature.objectId);\r\n                });\r\n                // update updated features\r\n                edits.updatedFeatures.forEach(function (feature) {\r\n                    featureOidsToBeUpdated.push(feature.objectId);\r\n                });\r\n                _this.updateItems(featureOidsToBeUpdated);\r\n            });\r\n        }\r\n        SceneItemManager.prototype.get = function (oid) {\r\n            return this.items.get(oid);\r\n        };\r\n        SceneItemManager.prototype.getAll = function () {\r\n            var items = [];\r\n            this.items.forEach(function (item) {\r\n                items.push(item);\r\n            });\r\n            return items;\r\n        };\r\n        SceneItemManager.prototype.add = function (objectId, item) {\r\n            this.items.set(objectId, item);\r\n            this.scene.itemAdded.dispatch(item);\r\n        };\r\n        SceneItemManager.prototype.update = function (objectId, feature) {\r\n            var item = this.get(objectId);\r\n            item.updateGeometry(feature.geometry);\r\n            item.updateAttributes(feature.attributes);\r\n            this.scene.itemUpdated.dispatch(item);\r\n        };\r\n        SceneItemManager.prototype.remove = function (oid) {\r\n            var item = this.items.get(oid);\r\n            if (item) {\r\n                item.remove();\r\n                this.items.delete(oid);\r\n            }\r\n            this.scene.itemRemoved.dispatch(item);\r\n        };\r\n        SceneItemManager.prototype.updateItems = function (oids) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var query;\r\n                var _this = this;\r\n                return __generator(this, function (_a) {\r\n                    query = this.featureLayer.createQuery();\r\n                    query.returnZ = true;\r\n                    query.objectIds = oids;\r\n                    return [2 /*return*/, this.featureLayer.queryFeatures(query).then(function (featureSet) {\r\n                            featureSet.features.forEach(function (feature) {\r\n                                var oid = feature.getObjectId();\r\n                                _this.update(oid, feature);\r\n                            });\r\n                            return {};\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        SceneItemManager.prototype.toJSON = function () {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var query;\r\n                return __generator(this, function (_a) {\r\n                    query = this.featureLayer.createQuery();\r\n                    query.returnZ = true;\r\n                    return [2 /*return*/, this.featureLayer.queryFeatures(query).then(function (featureSet) {\r\n                            var featuresJSON = [];\r\n                            featureSet.features.forEach(function (feature) {\r\n                                //const oid = (feature.getObjectId() as any) as number;\r\n                                //this.update(oid, feature);\r\n                                var fJSON = { geometry: feature.geometry.toJSON(), attributes: feature.attributes };\r\n                                featuresJSON.push(fJSON);\r\n                            });\r\n                            return featuresJSON;\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        return SceneItemManager;\r\n    }());\r\n    exports.SceneItemManager = SceneItemManager;\r\n    var SceneBase = /** @class */ (function () {\r\n        function SceneBase(view) {\r\n            this.view = view;\r\n            this.managers = [];\r\n            // Events\r\n            this.itemAdded = new utils_1.SimpleEventDispatcher();\r\n            this.itemRemoved = new utils_1.SimpleEventDispatcher();\r\n            this.itemUpdated = new utils_1.SimpleEventDispatcher();\r\n        }\r\n        SceneBase.prototype.getItem = function (layer, oid) {\r\n            for (var i = 0; i < this.managers.length; ++i) {\r\n                var manager = this.managers[i];\r\n                if (manager.featureLayer == layer) {\r\n                    return manager.get(oid);\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        SceneBase.prototype.updateItem = function (layer, oid, geometry, attributes) {\r\n            var item = this.getItem(layer, oid);\r\n            item.updateGeometry(geometry);\r\n            item.updateAttributes(attributes);\r\n            this.itemUpdated.dispatch(item);\r\n        };\r\n        SceneBase.prototype.updateItemAttributes = function (layer, oid, attributes) {\r\n            var item = this.getItem(layer, oid);\r\n            item.updateAttributes(attributes);\r\n            this.itemUpdated.dispatch(item);\r\n        };\r\n        SceneBase.prototype.getAllItems = function () {\r\n            var items = [];\r\n            this.managers.forEach(function (manager) {\r\n                items = items.concat(manager.getAll());\r\n            });\r\n            return items;\r\n        };\r\n        SceneBase.prototype.createItem = function (layer) {\r\n            for (var i = 0; i < this.managers.length; ++i) {\r\n                var manager = this.managers[i];\r\n                if (manager.featureLayer == layer) {\r\n                    return manager.create();\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        return SceneBase;\r\n    }());\r\n    exports.SceneBase = SceneBase;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack:///./src/Scene.js?");

/***/ }),

/***/ "./src/data.js":
/*!*********************!*\
  !*** ./src/data.js ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! esri/layers/FeatureLayer */ \"esri/layers/FeatureLayer\"), __webpack_require__(/*! esri/renderers */ \"esri/renderers\"), __webpack_require__(/*! esri/symbols/PolygonSymbol3D */ \"esri/symbols/PolygonSymbol3D\"), __webpack_require__(/*! esri/symbols/PointSymbol3D */ \"esri/symbols/PointSymbol3D\"), __webpack_require__(/*! esri/symbols/LineSymbol3D */ \"esri/symbols/LineSymbol3D\"), __webpack_require__(/*! esri/symbols/LineSymbol3DLayer */ \"esri/symbols/LineSymbol3DLayer\"), __webpack_require__(/*! esri/symbols/IconSymbol3DLayer */ \"esri/symbols/IconSymbol3DLayer\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, FeatureLayer_1, renderers_1, PolygonSymbol3D_1, PointSymbol3D_1, LineSymbol3D_1, LineSymbol3DLayer_1, IconSymbol3DLayer_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    FeatureLayer_1 = __importDefault(FeatureLayer_1);\r\n    PolygonSymbol3D_1 = __importDefault(PolygonSymbol3D_1);\r\n    PointSymbol3D_1 = __importDefault(PointSymbol3D_1);\r\n    LineSymbol3D_1 = __importDefault(LineSymbol3D_1);\r\n    LineSymbol3DLayer_1 = __importDefault(LineSymbol3DLayer_1);\r\n    IconSymbol3DLayer_1 = __importDefault(IconSymbol3DLayer_1);\r\n    function createControlCurveSymbol() {\r\n        return new LineSymbol3D_1.default({\r\n            symbolLayers: [\r\n                new LineSymbol3DLayer_1.default({\r\n                    size: 1,\r\n                    material: { color: \"black\" },\r\n                    cap: \"round\",\r\n                    join: \"round\"\r\n                })\r\n            ]\r\n        });\r\n    }\r\n    function getPolygonAnnotationSymbol() {\r\n        //return new SimpleFillSymbol();\r\n        return new PolygonSymbol3D_1.default({\r\n            symbolLayers: [{\r\n                    type: \"fill\",\r\n                    material: {\r\n                        color: [255, 50, 51, 0.4]\r\n                    },\r\n                    outline: {\r\n                        color: \"black\",\r\n                        size: \"1px\"\r\n                    }\r\n                }]\r\n        });\r\n    }\r\n    function getPointAnnotationSymbol() {\r\n        return new PointSymbol3D_1.default({ symbolLayers: [\r\n                new IconSymbol3DLayer_1.default({\r\n                    size: 8,\r\n                    material: {\r\n                        color: [255, 50, 51, 0.4]\r\n                    },\r\n                    outline: {\r\n                        color: \"black\",\r\n                        size: \"1px\"\r\n                    }\r\n                })\r\n            ] });\r\n    }\r\n    function mockupControlCurveLayer() {\r\n        var a = [{ \"geometry\": { type: \"polyline\", \"hasZ\": true, \"spatialReference\": { \"latestWkid\": 3857, \"wkid\": 102100 }, \"paths\": [[[966727.2623780279, 6464995.646654157, 110.26155186444521], [966667.3354162958, 6464870.3248822475, 154.6529075568542], [966770.6685053011, 6464729.163696627, 169.31745547894388], [966940.4283295692, 6464826.216097421, 167.5510607128963], [966942.8628542367, 6464926.448608506, 158.035329551436], [966880.0551065693, 6465004.579115311, 141.06792043615133], [966786.4377706631, 6465021.770193718, 117.25648824404925]]] }, \"attributes\": { \"ObjectID\": 1, \"label\": \"church\", \"payload\": \"{\\\"spatialReference\\\":{\\\"wkid\\\":102100},\\\"x\\\":966823.3973337851,\\\"y\\\":6464889.013685285,\\\"z\\\":100}\" } }];\r\n        var b = [\r\n            {\r\n                \"geometry\": {\r\n                    \"type\": \"polyline\",\r\n                    \"hasZ\": true,\r\n                    \"spatialReference\": {\r\n                        \"latestWkid\": 3857,\r\n                        \"wkid\": 102100\r\n                    },\r\n                    \"paths\": [\r\n                        [\r\n                            [\r\n                                966727.2623780279,\r\n                                6464995.646654157,\r\n                                110.26155186444521\r\n                            ],\r\n                            [\r\n                                966667.3354162958,\r\n                                6464870.3248822475,\r\n                                154.6529075568542\r\n                            ],\r\n                            [\r\n                                966770.6685053011,\r\n                                6464729.163696627,\r\n                                169.31745547894388\r\n                            ],\r\n                            [\r\n                                966940.4283295692,\r\n                                6464826.216097421,\r\n                                167.5510607128963\r\n                            ],\r\n                            [\r\n                                966942.8628542367,\r\n                                6464926.448608506,\r\n                                158.035329551436\r\n                            ],\r\n                            [\r\n                                966880.0551065693,\r\n                                6465004.579115311,\r\n                                141.06792043615133\r\n                            ],\r\n                            [\r\n                                966786.4377706631,\r\n                                6465021.770193718,\r\n                                117.25648824404925\r\n                            ]\r\n                        ]\r\n                    ]\r\n                },\r\n                \"attributes\": {\r\n                    \"ObjectID\": 1,\r\n                    \"label\": \"church\",\r\n                    \"payload\": \"{\\\"spatialReference\\\":{\\\"wkid\\\":102100},\\\"x\\\":966823.3973337851,\\\"y\\\":6464889.013685285,\\\"z\\\":100}\"\r\n                }\r\n            },\r\n            {\r\n                \"geometry\": {\r\n                    \"type\": \"polyline\",\r\n                    \"hasZ\": true,\r\n                    \"spatialReference\": {\r\n                        \"latestWkid\": 3857,\r\n                        \"wkid\": 102100\r\n                    },\r\n                    \"paths\": [\r\n                        [\r\n                            [\r\n                                967836.1218690132,\r\n                                6465273.006112495,\r\n                                97.1256841281429\r\n                            ],\r\n                            [\r\n                                967884.441191067,\r\n                                6464994.389303962,\r\n                                106.30304229352623\r\n                            ],\r\n                            [\r\n                                967933.9479463615,\r\n                                6464776.343187709,\r\n                                115.79676405526698\r\n                            ],\r\n                            [\r\n                                967981.8563736466,\r\n                                6464713.881512219,\r\n                                214.20615399070084\r\n                            ],\r\n                            [\r\n                                968002.7624888663,\r\n                                6464687.649509539,\r\n                                225.7532887426205\r\n                            ],\r\n                            [\r\n                                967995.3667924441,\r\n                                6464583.149436118,\r\n                                129.98068331182003\r\n                            ],\r\n                            [\r\n                                967993.7743413721,\r\n                                6464508.902771849,\r\n                                130.19618115574121\r\n                            ],\r\n                            [\r\n                                967975.3868797059,\r\n                                6464463.907279795,\r\n                                117.50912282522768\r\n                            ],\r\n                            [\r\n                                967941.2848767888,\r\n                                6464499.908294601,\r\n                                115.10360560193658\r\n                            ]\r\n                        ]\r\n                    ]\r\n                },\r\n                \"attributes\": {\r\n                    \"ObjectID\": 2,\r\n                    \"label\": \"tower\",\r\n                    \"payload\": \"{\\\"spatialReference\\\":{\\\"wkid\\\":102100},\\\"x\\\":968001.2064608899,\\\"y\\\":6464684.64364626,\\\"z\\\":179.17846357729286}\"\r\n                }\r\n            },\r\n            {\r\n                \"geometry\": {\r\n                    \"type\": \"polyline\",\r\n                    \"hasZ\": true,\r\n                    \"spatialReference\": {\r\n                        \"latestWkid\": 3857,\r\n                        \"wkid\": 102100\r\n                    },\r\n                    \"paths\": [\r\n                        [\r\n                            [\r\n                                967385.3474771685,\r\n                                6465033.114862103,\r\n                                101.21207924187183\r\n                            ],\r\n                            [\r\n                                967357.8153575902,\r\n                                6465320.278564328,\r\n                                200.2356843231246\r\n                            ],\r\n                            [\r\n                                967126.8542242819,\r\n                                6465445.90657288,\r\n                                292.4424694972113\r\n                            ],\r\n                            [\r\n                                966845.7128216656,\r\n                                6465300.343598669,\r\n                                159.5636027334258\r\n                            ],\r\n                            [\r\n                                966833.0560499161,\r\n                                6465166.467179871,\r\n                                109.68125836830586\r\n                            ]\r\n                        ]\r\n                    ]\r\n                },\r\n                \"attributes\": {\r\n                    \"ObjectID\": 3,\r\n                    \"label\": \"bridge\",\r\n                    \"payload\": \"{\\\"spatialReference\\\":{\\\"wkid\\\":102100},\\\"x\\\":967117.5310267736,\\\"y\\\":6465053.436887951,\\\"z\\\":102.01443701330572}\"\r\n                }\r\n            }\r\n        ];\r\n        var features = b;\r\n        //features.push(a[0]);\r\n        var controlCurves = new FeatureLayer_1.default({\r\n            source: features,\r\n            renderer: new renderers_1.SimpleRenderer({ symbol: createControlCurveSymbol() }),\r\n            objectIdField: \"ObjectID\",\r\n            outFields: [\"*\"],\r\n            geometryType: \"polyline\",\r\n            spatialReference: {\r\n                wkid: 102100\r\n            },\r\n            fields: [\r\n                {\r\n                    name: \"ObjectID\",\r\n                    type: \"oid\"\r\n                },\r\n                {\r\n                    name: \"label\",\r\n                    type: \"string\",\r\n                    defaultValue: \"\"\r\n                },\r\n                {\r\n                    name: \"payload\",\r\n                    type: \"string\",\r\n                    defaultValue: \"{}\"\r\n                }\r\n            ],\r\n            elevationInfo: { mode: \"absolute-height\" },\r\n            //elevationInfo: {mode: \"relative-to-scene\"},\r\n            hasZ: true\r\n        });\r\n        return controlCurves;\r\n    }\r\n    exports.mockupControlCurveLayer = mockupControlCurveLayer;\r\n    function mockupPolygonAnnotationsLayer() {\r\n        var features = [\r\n            {\r\n                geometry: {\r\n                    type: \"polygon\",\r\n                    hasZ: true,\r\n                    spatialReference: {\r\n                        latestWkid: 3857,\r\n                        wkid: 102100\r\n                    },\r\n                    rings: [\r\n                        [\r\n                            [\r\n                                19217876.760354478,\r\n                                -5393002.970523333,\r\n                                31.28535285592079\r\n                            ],\r\n                            [\r\n                                19217877.01326432,\r\n                                -5392991.800032023,\r\n                                31.28535285592079\r\n                            ],\r\n                            [\r\n                                19217884.94973673,\r\n                                -5392992.204076632,\r\n                                31.28535285592079\r\n                            ],\r\n                            [\r\n                                19217884.593554057,\r\n                                -5393004.048039467,\r\n                                31.28535285592079\r\n                            ],\r\n                            [\r\n                                19217876.760354478,\r\n                                -5393002.970523333,\r\n                                31.28535285592079\r\n                            ]\r\n                        ]\r\n                    ]\r\n                },\r\n                attributes: {\r\n                    ObjectID: 1,\r\n                    label: \"cleanup this space\",\r\n                    floor: 7,\r\n                    payload: \"{\\\"activeFloor\\\":7,\\\"cameraJSON\\\":{\\\"position\\\":{\\\"spatialReference\\\":{\\\"latestWkid\\\":3857,\\\"wkid\\\":102100},\\\"x\\\":19217854.771936584,\\\"y\\\":-5393044.020267442,\\\"z\\\":62.844063609838486},\\\"heading\\\":31.69392227253801,\\\"tilt\\\":46.896296459835156}}\"\r\n                }\r\n            },\r\n            {\r\n                geometry: {\r\n                    type: \"polygon\",\r\n                    hasZ: true,\r\n                    spatialReference: {\r\n                        latestWkid: 3857,\r\n                        wkid: 102100\r\n                    },\r\n                    rings: [\r\n                        [\r\n                            [\r\n                                19217916.13918399,\r\n                                -5392996.587330811,\r\n                                10.993463165126741\r\n                            ],\r\n                            [\r\n                                19217909.935894243,\r\n                                -5392996.481199406,\r\n                                10.993463165126741\r\n                            ],\r\n                            [\r\n                                19217910.63157843,\r\n                                -5392990.261075182,\r\n                                10.993463166058064\r\n                            ],\r\n                            [\r\n                                19217916.667029668,\r\n                                -5392990.138467617,\r\n                                10.993463165126741\r\n                            ],\r\n                            [\r\n                                19217916.13918399,\r\n                                -5392996.587330811,\r\n                                10.993463165126741\r\n                            ]\r\n                        ]\r\n                    ]\r\n                },\r\n                attributes: {\r\n                    ObjectID: 3,\r\n                    label: \"prepare area for art exhibition\",\r\n                    floor: 2,\r\n                    payload: \"{\\\"activeFloor\\\":2,\\\"cameraJSON\\\":{\\\"position\\\":{\\\"spatialReference\\\":{\\\"latestWkid\\\":3857,\\\"wkid\\\":102100},\\\"x\\\":19217908.03229506,\\\"y\\\":-5393006.696851547,\\\"z\\\":17.58430082537234},\\\"heading\\\":24.01682505226527,\\\"tilt\\\":61.28988126042055}}\"\r\n                }\r\n            }\r\n        ];\r\n        var polygonAnnotations = new FeatureLayer_1.default({\r\n            title: \"area annotation\",\r\n            source: features,\r\n            geometryType: \"polygon\",\r\n            spatialReference: {\r\n                wkid: 102100\r\n            },\r\n            renderer: new renderers_1.SimpleRenderer({ symbol: getPolygonAnnotationSymbol() }),\r\n            objectIdField: \"ObjectID\",\r\n            outFields: [\"*\"],\r\n            fields: [\r\n                {\r\n                    name: \"ObjectID\",\r\n                    type: \"oid\"\r\n                },\r\n                {\r\n                    name: \"label\",\r\n                    type: \"string\",\r\n                    defaultValue: \"\"\r\n                },\r\n                {\r\n                    name: \"floor\",\r\n                    type: \"integer\",\r\n                    defaultValue: 0\r\n                },\r\n                {\r\n                    name: \"payload\",\r\n                    type: \"string\",\r\n                    defaultValue: \"{}\"\r\n                }\r\n            ],\r\n            elevationInfo: { mode: \"absolute-height\" },\r\n            hasZ: true\r\n        });\r\n        return polygonAnnotations;\r\n    }\r\n    exports.mockupPolygonAnnotationsLayer = mockupPolygonAnnotationsLayer;\r\n    function mockupPointAnnotationsLayer() {\r\n        var features = [\r\n            {\r\n                geometry: {\r\n                    type: \"point\",\r\n                    spatialReference: {\r\n                        latestWkid: 3857,\r\n                        wkid: 102100\r\n                    },\r\n                    x: 19217932.525376216,\r\n                    y: -5393015.539379302,\r\n                    z: 18.19316692557186\r\n                },\r\n                attributes: {\r\n                    ObjectID: 1,\r\n                    label: \"out of service\",\r\n                    floor: 4,\r\n                    payload: \"{\\\"activeFloor\\\":4,\\\"cameraJSON\\\":{\\\"position\\\":{\\\"spatialReference\\\":{\\\"latestWkid\\\":3857,\\\"wkid\\\":102100},\\\"x\\\":19217930.368655637,\\\"y\\\":-5393016.560506998,\\\"z\\\":20.85097479261458},\\\"heading\\\":69.22666739635041,\\\"tilt\\\":30.729945183381567}}\"\r\n                }\r\n            },\r\n            {\r\n                geometry: {\r\n                    type: \"point\",\r\n                    spatialReference: {\r\n                        latestWkid: 3857,\r\n                        wkid: 102100\r\n                    },\r\n                    x: 19217858.608012177,\r\n                    y: -5393013.701136836,\r\n                    z: 11.369978753849864\r\n                },\r\n                attributes: {\r\n                    ObjectID: 2,\r\n                    label: \"chair is broken\",\r\n                    floor: 2,\r\n                    payload: \"{\\\"activeFloor\\\":2,\\\"cameraJSON\\\":{\\\"position\\\":{\\\"spatialReference\\\":{\\\"latestWkid\\\":3857,\\\"wkid\\\":102100},\\\"x\\\":19217854.962134216,\\\"y\\\":-5393011.261169908,\\\"z\\\":14.156350567936897},\\\"heading\\\":124.4190966724694,\\\"tilt\\\":49.92131652604984}}\"\r\n                }\r\n            },\r\n            {\r\n                geometry: {\r\n                    type: \"point\",\r\n                    spatialReference: {\r\n                        latestWkid: 3857,\r\n                        wkid: 102100\r\n                    },\r\n                    x: 19217917.586651713,\r\n                    y: -5393013.491416072,\r\n                    z: 11.805857517756522\r\n                },\r\n                attributes: {\r\n                    ObjectID: 3,\r\n                    label: \"tab is not working properly\",\r\n                    floor: 2,\r\n                    payload: \"{\\\"activeFloor\\\":2,\\\"cameraJSON\\\":{\\\"position\\\":{\\\"spatialReference\\\":{\\\"latestWkid\\\":3857,\\\"wkid\\\":102100},\\\"x\\\":19217915.62607714,\\\"y\\\":-5393009.327107981,\\\"z\\\":13.660603593103588},\\\"heading\\\":154.87859533943296,\\\"tilt\\\":57.85159388309063}}\"\r\n                }\r\n            },\r\n            {\r\n                geometry: {\r\n                    type: \"point\",\r\n                    spatialReference: {\r\n                        latestWkid: 3857,\r\n                        wkid: 102100\r\n                    },\r\n                    x: 19217851.44220278,\r\n                    y: -5392995.566271134,\r\n                    z: 11.411878223530948\r\n                },\r\n                attributes: {\r\n                    ObjectID: 4,\r\n                    label: \"what are these cubes about?\",\r\n                    floor: 2,\r\n                    payload: \"{\\\"activeFloor\\\":2,\\\"cameraJSON\\\":{\\\"position\\\":{\\\"spatialReference\\\":{\\\"latestWkid\\\":3857,\\\"wkid\\\":102100},\\\"x\\\":19217852.392227482,\\\"y\\\":-5392988.496369267,\\\"z\\\":14.072521711699665},\\\"heading\\\":188.4509352519618,\\\"tilt\\\":63.90100944339568}}\"\r\n                }\r\n            }\r\n        ];\r\n        var pointAnnotations = new FeatureLayer_1.default({\r\n            title: \"point annotation\",\r\n            source: features,\r\n            geometryType: \"point\",\r\n            spatialReference: {\r\n                wkid: 102100\r\n            },\r\n            renderer: new renderers_1.SimpleRenderer({ symbol: getPointAnnotationSymbol() }),\r\n            objectIdField: \"ObjectID\",\r\n            outFields: [\"*\"],\r\n            fields: [\r\n                {\r\n                    name: \"ObjectID\",\r\n                    type: \"oid\"\r\n                },\r\n                {\r\n                    name: \"label\",\r\n                    type: \"string\",\r\n                    defaultValue: \"\"\r\n                },\r\n                {\r\n                    name: \"floor\",\r\n                    type: \"integer\",\r\n                    defaultValue: 0\r\n                },\r\n                {\r\n                    name: \"payload\",\r\n                    type: \"string\",\r\n                    defaultValue: \"{}\"\r\n                }\r\n            ],\r\n            elevationInfo: { mode: \"absolute-height\" },\r\n            hasZ: true\r\n        });\r\n        return pointAnnotations;\r\n    }\r\n    exports.mockupPointAnnotationsLayer = mockupPointAnnotationsLayer;\r\n    //----------------------------------\r\n    //  unique id\r\n    //----------------------------------\r\n    var _uid_counter = 1;\r\n    function generateUID() {\r\n        return _uid_counter++;\r\n    }\r\n    exports.generateUID = generateUID;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack:///./src/data.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! ./Cameras */ \"./src/Cameras.js\"), __webpack_require__(/*! ./ItemList */ \"./src/ItemList.js\"), __webpack_require__(/*! esri/widgets/Expand */ \"esri/widgets/Expand\"), __webpack_require__(/*! esri/widgets/Editor */ \"esri/widgets/Editor\"), __webpack_require__(/*! ./BimExample */ \"./src/BimExample.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, Cameras_1, ItemList_1, Expand_1, Editor_1, BimExample_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    Expand_1 = __importDefault(Expand_1);\r\n    Editor_1 = __importDefault(Editor_1);\r\n    // credits @jkieboom@esri.com\r\n    function createFullscreen() {\r\n        var fullscreen = document.createElement(\"div\");\r\n        fullscreen.classList.add(\"esri-widget--button\", \"esri-interactive\");\r\n        var span = document.createElement(\"span\");\r\n        span.classList.add(\"esri-icon\", \"esri-icon-zoom-out-fixed\");\r\n        fullscreen.appendChild(span);\r\n        fullscreen.addEventListener(\"click\", function () {\r\n            if (span.classList.contains(\"esri-icon-zoom-out-fixed\")) {\r\n                span.classList.remove(\"esri-icon-zoom-out-fixed\");\r\n                span.classList.add(\"esri-icon-zoom-in-fixed\");\r\n            }\r\n            else {\r\n                span.classList.add(\"esri-icon-zoom-out-fixed\");\r\n                span.classList.remove(\"esri-icon-zoom-in-fixed\");\r\n            }\r\n            parent.postMessage({ type: \"fullscreen\" }, \"*\");\r\n        });\r\n        return fullscreen;\r\n    }\r\n    var App = /** @class */ (function () {\r\n        function App() {\r\n            var _this = this;\r\n            window[\"app\"] = this;\r\n            this.scene = new BimExample_1.Scene();\r\n            this.view = this.scene.view;\r\n            this.scene.load(function () {\r\n                _this.buildUI();\r\n            });\r\n            this.view.on(\"click\", function (e) {\r\n                _this.view.hitTest(e.screenPoint).then(function (hitTestResults) {\r\n                    var results = hitTestResults.results;\r\n                    if (results.length > 0 && results[0].graphic != null) {\r\n                        var selected = results[0].graphic;\r\n                        // check for selected splines\r\n                        /*\r\n                        for(let i=0;i<this.splines.length; ++i){\r\n                            const spline = this.splines[i];\r\n                            if(spline.controlCurveGraphic == selected || spline.curveGraphic == selected){\r\n                                //this.reshape(spline);\r\n                                e.stopPropagation();\r\n                                return;\r\n                            }\r\n                        }\r\n                        */\r\n                        // check for camera selection\r\n                        for (var i = 0; i < _this.scene.cameras.length; ++i) {\r\n                            var camera = _this.scene.cameras[i];\r\n                            if (camera.cameraGraphic == selected) {\r\n                                Cameras_1.move(_this.view, _this.scene.cameraLayer, camera.cameraGraphic, !camera.hasTarget);\r\n                            }\r\n                            if (camera.lookatGraphic == selected) {\r\n                                Cameras_1.move(_this.view, _this.scene.cameraLayer, camera.lookatGraphic);\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            });\r\n            // Editor widget -------\r\n            var layerinfos = [];\r\n            this.scene.managers.forEach(function (manager) {\r\n                var layerInfo = manager.getLayerInfo();\r\n                if (layerInfo) {\r\n                    layerinfos.push(layerInfo);\r\n                }\r\n            });\r\n            this.editor = new Editor_1.default({\r\n                view: this.view,\r\n                container: document.createElement(\"div\"),\r\n                layerInfos: layerinfos\r\n            });\r\n            //this.editor.supportingWidgetDefaults.sketch.polygonSymbol\r\n            //this.editor.supportingWidgetDefaults.sketch.defaultUpdateOptions.enableZ = false;\r\n            //this.editor.supportingWidgetDefaults.sketch.defaultUpdateOptions\r\n            //this.editor.viewModel.sketchViewModel.on(\"create\", (e)=>{\r\n            //    e.state\r\n            //})\r\n            var editedItem = null;\r\n            var editedItemInfo = null;\r\n            // this will initialize new features with the current payload ----\r\n            var handle = null;\r\n            this.editor.watch(\"activeWorkflow\", function (activeWorkflow) {\r\n                if (handle != null) {\r\n                    handle.remove();\r\n                    handle = null;\r\n                }\r\n                if (activeWorkflow != null) {\r\n                    console.log(\"activeWorkflow:\", activeWorkflow);\r\n                    handle = activeWorkflow.watch(\"stepId\", function (stepId) {\r\n                        console.log(\"stepId:\", activeWorkflow.stepId);\r\n                        // create workflow steps ---------\r\n                        if (stepId == \"awaiting-feature-to-create\" && _this.editor.activeWorkflow.type == \"create\") {\r\n                            // modify template to inject app specific information\r\n                            var data = _this.editor.activeWorkflow.data;\r\n                            data.creationInfo.template.prototype.attributes[\"payload\"] = _this.scene.encodeSceneItemPayload();\r\n                        }\r\n                        if (stepId == \"awaiting-feature-creation-info\" && _this.editor.activeWorkflow.type == \"create\") {\r\n                            /*\r\n                            if(editedItem != null){\r\n                                // we completely remove item if it was staged for creation\r\n                                editedItem.remove();\r\n                                editedItem = null;\r\n                            }\r\n                            */\r\n                        }\r\n                        // update workflow steps --------\r\n                        if (stepId == \"editing-existing-feature\" && _this.editor.activeWorkflow.type == \"update\") {\r\n                            var data = _this.editor.activeWorkflow.data;\r\n                            var feature = data.edits.feature;\r\n                            editedItemInfo = {\r\n                                layer: data.editableItem.layer,\r\n                                objectId: feature.getObjectId(),\r\n                                resetGeometry: feature.geometry.clone(),\r\n                                resetAttributes: __assign({}, feature.attributes)\r\n                            };\r\n                        }\r\n                        if (stepId == \"awaiting-feature-to-update\") {\r\n                            /*\r\n                            // TODO: find out how to see if a feature has been discarded\r\n                            // if there is an item currently specified\r\n                            if(editedItem != null){\r\n                                // In update workflow this means we have discared and are about to start\r\n                                // updating (a potentially different) feature. We therefore reset the\r\n                                // edited item to its start state before setting it to null\r\n                                //this.scene.updateItem(editedItemInfo.layer, editedItemInfo.objectId, editedItemInfo.resetGeometry, editedItemInfo.resetAttributes);\r\n                                editedItem = null;\r\n                            }\r\n                            */\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n            // this will update currently created/updated features with the current payload ----\r\n            // TODO:\r\n            // handle attribute modification in create and update workflows ------\r\n            this.editor.viewModel.featureFormViewModel.on(\"value-change\", function (e) {\r\n                if (_this.editor.activeWorkflow.type == \"create\") {\r\n                    // we are updating feature attributes of a feature which hasnt been created yet\r\n                    if (e.valid) {\r\n                        var updatedAttributes = __assign({}, e.feature.attributes);\r\n                        updatedAttributes[e.fieldName] = e.value;\r\n                        editedItem.updateAttributes(updatedAttributes);\r\n                    }\r\n                }\r\n                else if (_this.editor.activeWorkflow.type == \"update\") {\r\n                    // we are updating feature attributes of an existing feature\r\n                    if (e.valid) {\r\n                        var updatedAttributes = __assign({}, e.feature.attributes);\r\n                        updatedAttributes[e.fieldName] = e.value;\r\n                        _this.scene.updateItemAttributes(e.layer, e.feature.getObjectId(), updatedAttributes);\r\n                    }\r\n                }\r\n            });\r\n            // handle geometry creation/update in create and update workflows -------\r\n            var svm = this.editor.viewModel.sketchViewModel;\r\n            svm.on(\"create\", function (e) {\r\n                switch (e.state) {\r\n                    case \"start\":\r\n                        if (_this.editor.activeWorkflow.type == \"create\") {\r\n                            // we are creating an item which does not exist on a feature layer yet\r\n                            var data = _this.editor.activeWorkflow.data;\r\n                            data.creationInfo.template.prototype.attributes[\"payload\"] = _this.scene.encodeSceneItemPayload();\r\n                            editedItem = _this.scene.createItem(data.creationInfo.layer);\r\n                            editedItem.updateAttributes(data.creationInfo.template.prototype);\r\n                        }\r\n                        break;\r\n                    case \"active\":\r\n                        if (editedItem != null) {\r\n                            editedItem.updateGeometry(e.graphic.geometry);\r\n                        }\r\n                        break;\r\n                    case \"complete\":\r\n                        if (editedItem != null) {\r\n                            editedItem.remove();\r\n                            editedItem = null;\r\n                        }\r\n                        break;\r\n                }\r\n            });\r\n            svm.on(\"update\", function (e) {\r\n                console.log(\"svm update\", e);\r\n                switch (e.state) {\r\n                    case \"start\":\r\n                        var graphic = e.graphics[0];\r\n                        if (_this.editor.activeWorkflow.type == \"update\") {\r\n                            // we are updating a item which already exists as a feature on the feature layer\r\n                            var data = _this.editor.activeWorkflow.data;\r\n                            var oid = graphic.getObjectId();\r\n                            editedItem = _this.scene.getItem(data.editableItem.layer, oid);\r\n                        }\r\n                        else if (_this.editor.activeWorkflow.type == \"create\") {\r\n                            // we are updating a item which does not exist on a feature layer yet\r\n                            var data = _this.editor.activeWorkflow.data;\r\n                            editedItem = _this.scene.createItem(data.creationInfo.layer);\r\n                            editedItem.updateGeometry(graphic.geometry);\r\n                            editedItem.updateAttributes(graphic.attributes);\r\n                        }\r\n                        break;\r\n                    case \"active\":\r\n                        {\r\n                            editedItem.updateGeometry(e.graphics[0].geometry);\r\n                        }\r\n                        break;\r\n                    case \"complete\":\r\n                        // we remove the staged scene item independent of wether creation was successfull or cancelled\r\n                        // NB: if the item was created successfully (and not discared), then we will catch that in applyEdits\r\n                        //   and create the item again there\r\n                        if (_this.editor.activeWorkflow.type == \"create\" && editedItem != null) {\r\n                            editedItem.remove();\r\n                        }\r\n                        editedItem = null;\r\n                        break;\r\n                }\r\n            });\r\n        }\r\n        App.prototype.buildUI = function () {\r\n            var _this = this;\r\n            // ItemList --------------\r\n            this.itemList = new ItemList_1.ItemList(this.scene);\r\n            this.itemList.itemClicked.subscribe(function (item) {\r\n                _this.scene.clickItem(item);\r\n            });\r\n            /*\r\n            // add picture in picture thingy\r\n            const pipContainer = document.getElementById(\"camera-view-container\") as HTMLDivElement;\r\n    \r\n    \r\n            // add button ---\r\n            const cameraButton = document.createElement(\"button\") as HTMLButtonElement;\r\n            cameraButton.classList.add(\"esri-button\");\r\n            cameraButton.id = \"create-camera\";\r\n            cameraButton.title = \"click and drag to place a camera\";\r\n            cameraButton.innerHTML = \"create camera\";\r\n            cameraButton.addEventListener(\"click\", ()=>{\r\n                drawCamera( this.scene, this.scene.cameraLayer, this.scene.createView(pipContainer));\r\n                animateButton.disabled = false;\r\n            });\r\n    \r\n    \r\n            const animateButton = document.createElement(\"button\") as HTMLButtonElement;\r\n            animateButton.classList.add(\"esri-button\");\r\n            animateButton.id = \"animate\";\r\n            animateButton.title = \"attach camera to first spline\";\r\n            animateButton.disabled = true;\r\n            animateButton.innerHTML = \"animate\";\r\n            animateButton.addEventListener(\"click\", ()=>{\r\n    \r\n                const camera = this.scene.cameras[0];\r\n    \r\n                camera.animationCurve = this.scene.splines.get(1);\r\n    \r\n                const timeSliderContainer = document.createElement(\"div\") as HTMLDivElement;\r\n                timeSliderContainer.style.width = \"100%\";\r\n                timeSliderContainer.style.height = \"25px\";\r\n                timeSliderContainer.style.bottom = \"0px\";\r\n                timeSliderContainer.style.backgroundColor = \"#ffffff0f\";\r\n    \r\n    \r\n                const initalValue = 0;\r\n                const slider = new Slider({\r\n                    container: timeSliderContainer,\r\n                    min: 0,\r\n                    max: 100,\r\n                    labelsVisible: false,\r\n                    precision: 0,\r\n                    values: [initalValue]\r\n                });\r\n    \r\n    \r\n                slider.on(\"thumb-drag\", (event)=>{\r\n                    const value = event.value;\r\n                    // map to [0,1]\r\n                    const min = slider.min;\r\n                    const max = slider.max;\r\n    \r\n                    const valueMapped = (value - min) / (max - min);\r\n                    this.scene.time = valueMapped;\r\n                });\r\n    \r\n                camera.pipView.ui.add([slider], \"manual\");\r\n            });\r\n            */\r\n            var editorExpand = new Expand_1.default({\r\n                expandTooltip: \"create or update items\",\r\n                view: this.view,\r\n                content: this.editor\r\n            });\r\n            // item list ----\r\n            var itemListExpand = new Expand_1.default({\r\n                expandTooltip: \"expand list of items\",\r\n                view: this.view,\r\n                content: this.itemList.div\r\n            });\r\n            this.view.ui.add(itemListExpand, \"top-right\");\r\n            this.view.ui.add(createFullscreen(), \"top-right\");\r\n            if (this.scene.name == \"bim-example\") {\r\n            }\r\n            else {\r\n                var cameraPanel = document.getElementById(\"camera-panel\");\r\n                cameraPanel.style.display = null;\r\n                this.view.ui.add(cameraPanel, \"bottom-left\");\r\n            }\r\n            // always add editor widget\r\n            this.view.ui.add(editorExpand, \"bottom-right\");\r\n        };\r\n        return App;\r\n    }());\r\n    var app = new App();\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack:///./src/index.js?");

/***/ }),

/***/ "./src/utils.js":
/*!**********************!*\
  !*** ./src/utils.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;//----------------------------------\r\n//  Map\r\n//----------------------------------\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    //----------------------------------\r\n    //  unique id\r\n    //----------------------------------\r\n    var _uid_counter = 1;\r\n    function generateUID() {\r\n        return _uid_counter++;\r\n    }\r\n    exports.generateUID = generateUID;\r\n    //----------------------------------\r\n    // simple event system\r\n    //----------------------------------\r\n    var SignalDispatcher = /** @class */ (function () {\r\n        function SignalDispatcher() {\r\n            this.subscribers = [];\r\n        }\r\n        SignalDispatcher.prototype.subscribe = function (subscriber) {\r\n            this.subscribers.push(subscriber);\r\n        };\r\n        SignalDispatcher.prototype.dispatch = function () {\r\n            for (var _i = 0, _a = this.subscribers; _i < _a.length; _i++) {\r\n                var subscriber = _a[_i];\r\n                subscriber();\r\n            }\r\n        };\r\n        return SignalDispatcher;\r\n    }());\r\n    exports.SignalDispatcher = SignalDispatcher;\r\n    var SimpleEventDispatcher = /** @class */ (function () {\r\n        function SimpleEventDispatcher() {\r\n            this.subscribers = [];\r\n        }\r\n        SimpleEventDispatcher.prototype.subscribe = function (subscriber) {\r\n            this.subscribers.push(subscriber);\r\n        };\r\n        SimpleEventDispatcher.prototype.dispatch = function (arg) {\r\n            for (var _i = 0, _a = this.subscribers; _i < _a.length; _i++) {\r\n                var subscriber = _a[_i];\r\n                subscriber(arg);\r\n            }\r\n        };\r\n        return SimpleEventDispatcher;\r\n    }());\r\n    exports.SimpleEventDispatcher = SimpleEventDispatcher;\r\n    //----------------------------------\r\n    // base URL \r\n    //----------------------------------\r\n    function baseURL() {\r\n        return window.location.href.substring(0, window.location.href.lastIndexOf(\"/\"));\r\n    }\r\n    exports.baseURL = baseURL;\r\n    //----------------------------------\r\n    // vec2\r\n    //----------------------------------\r\n    var Vec2 = /** @class */ (function () {\r\n        function Vec2(x, y) {\r\n            this.x = x;\r\n            this.y = y;\r\n        }\r\n        Vec2.prototype.length = function () {\r\n            return Math.sqrt(this.x * this.x + this.y * this.y);\r\n        };\r\n        Vec2.prototype.normalize = function () {\r\n            var l = this.length();\r\n            if (l > 0) {\r\n                this.x /= l;\r\n                this.y /= l;\r\n            }\r\n        };\r\n        Vec2.prototype.normalized = function () {\r\n            var v = Vec2.create(this.x, this.y);\r\n            v.normalize();\r\n            return v;\r\n        };\r\n        Vec2.create = function (x, y) {\r\n            return new Vec2(x, y);\r\n        };\r\n        Vec2.from = function (v) {\r\n            return Vec2.create(v.x, v.y);\r\n        };\r\n        // a-b\r\n        Vec2.subtract = function (a, b) {\r\n            return Vec2.create(a.x - b.x, a.y - b.y);\r\n        };\r\n        Vec2.dot = function (a, b) {\r\n            return a.x * b.x + a.y * b.y;\r\n        };\r\n        return Vec2;\r\n    }());\r\n    exports.Vec2 = Vec2;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack:///./src/utils.js?");

/***/ }),

/***/ "esri/Camera":
/*!******************************!*\
  !*** external "esri/Camera" ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_esri_Camera__;\n\n//# sourceURL=webpack:///external_%22esri/Camera%22?");

/***/ }),

/***/ "esri/Graphic":
/*!*******************************!*\
  !*** external "esri/Graphic" ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_esri_Graphic__;\n\n//# sourceURL=webpack:///external_%22esri/Graphic%22?");

/***/ }),

/***/ "esri/Map":
/*!***************************!*\
  !*** external "esri/Map" ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_esri_Map__;\n\n//# sourceURL=webpack:///external_%22esri/Map%22?");

/***/ }),

/***/ "esri/geometry":
/*!********************************!*\
  !*** external "esri/geometry" ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_esri_geometry__;\n\n//# sourceURL=webpack:///external_%22esri/geometry%22?");

/***/ }),

/***/ "esri/geometry/Point":
/*!**************************************!*\
  !*** external "esri/geometry/Point" ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_esri_geometry_Point__;\n\n//# sourceURL=webpack:///external_%22esri/geometry/Point%22?");

/***/ }),

/***/ "esri/layers/BuildingSceneLayer":
/*!*************************************************!*\
  !*** external "esri/layers/BuildingSceneLayer" ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_esri_layers_BuildingSceneLayer__;\n\n//# sourceURL=webpack:///external_%22esri/layers/BuildingSceneLayer%22?");

/***/ }),

/***/ "esri/layers/FeatureLayer":
/*!*******************************************!*\
  !*** external "esri/layers/FeatureLayer" ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_esri_layers_FeatureLayer__;\n\n//# sourceURL=webpack:///external_%22esri/layers/FeatureLayer%22?");

/***/ }),

/***/ "esri/layers/GraphicsLayer":
/*!********************************************!*\
  !*** external "esri/layers/GraphicsLayer" ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_esri_layers_GraphicsLayer__;\n\n//# sourceURL=webpack:///external_%22esri/layers/GraphicsLayer%22?");

/***/ }),

/***/ "esri/layers/support/BuildingFilter":
/*!*****************************************************!*\
  !*** external "esri/layers/support/BuildingFilter" ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_esri_layers_support_BuildingFilter__;\n\n//# sourceURL=webpack:///external_%22esri/layers/support/BuildingFilter%22?");

/***/ }),

/***/ "esri/renderers":
/*!*********************************!*\
  !*** external "esri/renderers" ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_esri_renderers__;\n\n//# sourceURL=webpack:///external_%22esri/renderers%22?");

/***/ }),

/***/ "esri/symbols/IconSymbol3DLayer":
/*!*************************************************!*\
  !*** external "esri/symbols/IconSymbol3DLayer" ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_esri_symbols_IconSymbol3DLayer__;\n\n//# sourceURL=webpack:///external_%22esri/symbols/IconSymbol3DLayer%22?");

/***/ }),

/***/ "esri/symbols/LineSymbol3D":
/*!********************************************!*\
  !*** external "esri/symbols/LineSymbol3D" ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_esri_symbols_LineSymbol3D__;\n\n//# sourceURL=webpack:///external_%22esri/symbols/LineSymbol3D%22?");

/***/ }),

/***/ "esri/symbols/LineSymbol3DLayer":
/*!*************************************************!*\
  !*** external "esri/symbols/LineSymbol3DLayer" ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_esri_symbols_LineSymbol3DLayer__;\n\n//# sourceURL=webpack:///external_%22esri/symbols/LineSymbol3DLayer%22?");

/***/ }),

/***/ "esri/symbols/ObjectSymbol3DLayer":
/*!***************************************************!*\
  !*** external "esri/symbols/ObjectSymbol3DLayer" ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_esri_symbols_ObjectSymbol3DLayer__;\n\n//# sourceURL=webpack:///external_%22esri/symbols/ObjectSymbol3DLayer%22?");

/***/ }),

/***/ "esri/symbols/PointSymbol3D":
/*!*********************************************!*\
  !*** external "esri/symbols/PointSymbol3D" ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_esri_symbols_PointSymbol3D__;\n\n//# sourceURL=webpack:///external_%22esri/symbols/PointSymbol3D%22?");

/***/ }),

/***/ "esri/symbols/PolygonSymbol3D":
/*!***********************************************!*\
  !*** external "esri/symbols/PolygonSymbol3D" ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_esri_symbols_PolygonSymbol3D__;\n\n//# sourceURL=webpack:///external_%22esri/symbols/PolygonSymbol3D%22?");

/***/ }),

/***/ "esri/symbols/TextSymbol3DLayer":
/*!*************************************************!*\
  !*** external "esri/symbols/TextSymbol3DLayer" ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_esri_symbols_TextSymbol3DLayer__;\n\n//# sourceURL=webpack:///external_%22esri/symbols/TextSymbol3DLayer%22?");

/***/ }),

/***/ "esri/views/SceneView":
/*!***************************************!*\
  !*** external "esri/views/SceneView" ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_esri_views_SceneView__;\n\n//# sourceURL=webpack:///external_%22esri/views/SceneView%22?");

/***/ }),

/***/ "esri/views/draw/Draw":
/*!***************************************!*\
  !*** external "esri/views/draw/Draw" ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_esri_views_draw_Draw__;\n\n//# sourceURL=webpack:///external_%22esri/views/draw/Draw%22?");

/***/ }),

/***/ "esri/widgets/Editor":
/*!**************************************!*\
  !*** external "esri/widgets/Editor" ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_esri_widgets_Editor__;\n\n//# sourceURL=webpack:///external_%22esri/widgets/Editor%22?");

/***/ }),

/***/ "esri/widgets/Expand":
/*!**************************************!*\
  !*** external "esri/widgets/Expand" ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_esri_widgets_Expand__;\n\n//# sourceURL=webpack:///external_%22esri/widgets/Expand%22?");

/***/ }),

/***/ "esri/widgets/Sketch/SketchViewModel":
/*!******************************************************!*\
  !*** external "esri/widgets/Sketch/SketchViewModel" ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_esri_widgets_Sketch_SketchViewModel__;\n\n//# sourceURL=webpack:///external_%22esri/widgets/Sketch/SketchViewModel%22?");

/***/ }),

/***/ "esri/widgets/Slider":
/*!**************************************!*\
  !*** external "esri/widgets/Slider" ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_esri_widgets_Slider__;\n\n//# sourceURL=webpack:///external_%22esri/widgets/Slider%22?");

/***/ })

/******/ })});;